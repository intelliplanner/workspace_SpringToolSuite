server.port=9090
#spring.security.user.name=admin  
#spring.security.user.password=admin  

spring.datasource.url:jdbc:mysql://localhost:3306/test
spring.datasource.username:root
spring.datasource.password:root

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.hibernate.ddl-auto:update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# Hibernate ddl auto (create, create-drop, validate, update)

#spring.mvc.view.prefix=/WEB-INF/jsp/
#spring.mvc.view.suffix=.jsp

spring.thymeleaf.cache=false  
spring.thymeleaf.suffix: .jsp

#spring.devtools.restart.enabled=false
#server.contextPath=/springbootrestxml


#management.security.enabled=true  
#management.security.roles=ADMIN  

#security.basic.enabled=true  


# Only one can use for the path
#logging.file = mylog.log
#logging.path = mylog.log

#logging.level.root=debug
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.root=warn

# Spring boot support default logging but we can configure custome loggin in spring boot by logback configuration
#:Logback only support xml based config it exist in classpath resources folder


okta.oauth2.client-id=0oa31qmxbL4jG1N7u4x6
okta.oauth2.client-secret=FzOTC8q5VjO_ONcwf-4GPCNM-An7Cp3-mEVXSNfC
okta.oauth2.issuer=https://dev-569299.okta.com/oauth2/default
spring.main.allow-bean-definition-overriding=true

