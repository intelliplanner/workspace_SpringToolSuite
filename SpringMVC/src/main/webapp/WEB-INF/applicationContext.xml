<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean id="beanPostProcessorCustom"
		class="com.main.BeanPostProcessorCustom" init-method="init"
		destroy-method="destroy">
		<property name="message" value="hello vicky" />
	</bean>
	<bean class="com.main.BeanPostProcessorTest" />


	<mvc:resources mapping="/resources/**"
		location="/resources/" cache-period="31556926" />
	<!-- <mvc:resources mapping="/resources/**" location="classpath:/resources/" 
		/> -->



	<!-- <bean id="empBean" class="com.bean.EmployeeBean" /> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory <resources mapping="/resources/**" 
		location="/resources/" /> -->
	<!-- Enables the Spring MVC @Controller programming model -->

	<mvc:annotation-driven />
	<!-- Enables the Spring MVC @Controller programming model <annotation-driven 
		/> -->
	<!-- <context:property-placeholder location="classpath:database.properties"/> 
		and also can be done @propertyConfiguration in configuration class -->
	<!-- Enable Autowire -->

	<context:annotation-config />
	<context:component-scan base-package="com" />




	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource"><!-- destroy-method="close" -->
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="root" />

	</bean>

	<bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.bean.EmployeeBean</value>
				<value>com.bean.Student</value>
				<value>com.bean.WebChat</value>
			</list>
		</property>
		<!-- <property name="packagesToScan" value="com.bean"></property> -->
		<property name="hibernateProperties">
			<props>

				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="connection.pool_size">5</prop>
				<!-- <prop key="hibernate.enable_lazy_load_no_trans">false</prop> -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- <prop key="hibernate.default_schema">test</prop> -->
				<prop key="formal_sql">true</prop>
				<!-- <prop key="use_sql_comments">true</prop> -->

				<!-- <prop key="hbm2ddl.auto">create-drop</prop> -->

			</props>

		</property>
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>


	<bean id="employeeDao" class="com.dao.EmployeeDaoImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="employeeService" class="com.service.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao"></property>
	</bean>


	<bean id="studentDao" class="com.dao.StudentDaoImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>
	<bean id="studentService" class="com.service.StudentServiceImpl">
		<property name="studentDao" ref="studentDao"></property>
	</bean>

	<bean id="webChatDao" class="com.dao.WebChatDaoImpl">
		<property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</bean>

	<bean id="webChatService" class="com.service.WebChatServiceImpl">
		<property name="webChatDao" ref="webChatDao"></property>
	</bean>




</beans>  